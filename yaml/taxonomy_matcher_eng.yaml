openapi: 3.0.1
info:
  title: Taxonomy Matcher ENG
  description: >-
    This NLP microservice matches the input word with the name of a leaf nodes in the predefined English taxonomy. The entire branch from the matched leaf node to the root of the corresponding taxonomy tree is returned. <br><br>The full taxonomy consists of major categories (for e.g. retail, cars, etc.). Each category is stored as a separate taxonomy tree within the Taxonomy instance. Each node in a taxonomy tree is identified using a node_id. It has attributes: name (a human readable string), level (how far it is from the root node) and type (whether it is a root node, leaf node or body node).<br><br>This microservice can help identify the types of concept that are frequently mentioned in an article.<br><br><b>Authentication</b>:<br><br>Authentication is done using the x-api-key in the request header.
  version: '0.1'
servers:
  - url: 'https://apis.sentient.io'
tags:
- name: "v0.1"
  description: "Published Date - Dec 27, 2019"
paths:
  /microservices/nlp/taxonomy/v0.1/getpredictions:
    post:
      tags:
        - v0.1
      responses:
        '200':
          description: success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '420':
          description: Input Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'        
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      requestBody:
        description: <b>Input parameters</b><br><br><table class="inputtable" style="width:100%;border:1px solid grey"><tr><th style="width:15%;"><b>Field</b></th><th style="width:15%;"><b>Type</b></th><th style="width:70%;"><b>Description</b></th></tr><tr><td><b>text</b></td><td>Array</td><td>Required. A list of object names to be classify</td></tr><tr><td>threshold</td><td>Integer</td><td>Specifies the level of similarity that the search term</td></tr></table><br><br>
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input'
        required: true
components:
  schemas:
    success:
      description: a list of object names to be classify
      type: object
      properties:
        bike:
            type: string
            example: [
                      [
                        "news/sport/swimming/bike",
                        1
                      ]
                    ]
        buildings:
            type: string
            example: [
                    [
                        "careers/job by industry/real estate/buildings",
                        1.0
                    ],
                    [
                        "news/business news/real estate/buildings",
                        1.0
                    ]
                ]
        bus:
            type: string
            example: [
                    [
                      "careers/job by industry/travel/bus",
                      1
                    ],
                    [
                      "news/business news/travel/bus",
                      1
                    ]
                  ]
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties: 
        v0.1:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Dec 27, 2019
              description: Initial version release
    input:
      type: object
      properties:
        text:
          type: string
          format: array
          example: ["bus","cars","bike","train","buildings","Audi R8"]
        threshold:
          type: integer
          example: 1
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
