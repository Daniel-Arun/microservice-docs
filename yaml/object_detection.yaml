openapi: 3.0.1
info:
  title: Object Detection
  description: |+
    This Computer Vision microservice detects objects in the input image.
    
    The microservice returns detected objects with their classes and their bounding boxes in the image coordinates.
    
    The classes are: person, bicycle, car, motorbike, aeroplane, bus, train, truck, boat, traffic light, fire hydrant, stop sign, parking meter, bench, bird, cat, dog, horse, sheep, cow, elephant, bear, zebra, giraffe, backpack, umbrella, handbag, tie, suitcase, frisbee, skis, snowboard, sports ball, kite, baseball bat, baseball glove, skateboard, surfboard, tennis racket, bottle, wine glass, cup, fork, knife, spoon, bowl, banana, apple, sandwich, orange, broccoli, carrot, hot dog, pizza, donut, cake, chair, sofa, pottedplant, bed, diningtable, toilet, tvmonitor, laptop, mouse, remote, keyboard, cell phone, microwave, oven, toaster, sink, refrigerator, book, clock, vase, scissors, teddy bear, hair drier, toothbrush.
    
    We recommend the size of your image to be at least more than 416x416 pixels.
  version: '0.1.0'
  x-subscribelink: object_detection
servers:
  - url: 'https://apis.sentient.io'
tags:
- name: "v0.1.0"
  description: "Published Date - May 15, 2020"
paths:
  /microservices/cv/objectdetection/v0.1/getpredictions:
    post:
      tags:
        - v0.1.0
      responses:
        '200':
          description: success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example: {"Object 1": ["person : 100%",{"Bounding Box": {"Bot": 742,"Left": 19,"Right": 1019,"Top": 73}}],"Object 2": ["tie : 100%",{"Bounding Box": {"Bot": 783,"Left": 411,"Right": 595,"Top": 520}}]}

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '420':
          description: Input Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'        
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input'
        required: true
      security:
        - APIAuthorizer: []
components:
  schemas:
    success:
      type: object
      properties: 
        <Object_detected>:
          type: array
          example: ["person : 100%",{"Bounding Box": {"Bot": 742,"Left": 19,"Right": 1019,"Top": 73}}]
          description: "Details of the detected object"
          items:
            properties:
              person:
                type: string
                example: 100%
                description: people
              Bounding Box:
                type: object
                example: {"Bot": 742,"Left": 19,"Right": 1019,"Top": 73}
                description: Bounding box of the image
                properties:
                  Bot: 
                   type: number
                   example: 742
                   description: Bottom coordinate of the box
                  Left: 
                   type: number
                   example: 19
                   description: Left coordinate of the box
                  Right: 
                   type: number
                   example: 1019
                   description: Right coordinate of the box
                  Top: 
                   type: number
                   example: 73   
                   description: Top coordinate of the box                         
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
          
    versions:
      type: object
      properties: 
        v0.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - May 15,2020
              description: Initial version release
    input:
      type: object
      required:
      - image_base64
      properties:
        image_base64:
          x-name: image_base64
          type: string
          default: true
          example: /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUG...
          description: |+
            Input image file in base64 format. Images in the formats .bmp, .dib., .jpeg, .jpg, .jpe, .jp2, .png, .webp, .pbm, .pgm, .ppm, .pxm, .pnm, .sr, .ras, .tiff, .tif, .exr, .hdr, .pic are all supported.
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
