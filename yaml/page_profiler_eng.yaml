  openapi: 3.0.1
  info:
    title: Page Profiler ENG
    description: |+
      This NLP microservice retrieves web content in English from the input URL. 
      
      From the web content, the microservice then applies natural language processing to extracts named-entities and returns the output.
      
      The named-entity classes extracted are persons, locations, organisations and miscellaneous.<br><br>This microservice automatically extracts structured information from unstructured text data such as chatlogs, emails, news articles, etc.
    version: '1.0'
  servers:
    - url: 'https://apis.sentient.io'
  tags:
  - name: "v1.0"
    description: "Published Date - Apr 11, 2018"
  paths:
    /microservices/nlp/pageprofiler/v1.0/getpredictions:
      post:
        tags:
          - v1.0
        responses:
          '200':
            description: success response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/success'
                example: {"LOC": ["Beijing","Atlanta","Indonesia"], "MISC": [Twiight,Singaporean],"ORG": [CNA,Singapore Parliament],"PER": [Skip Navigation,Bookmarks]}
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/unauthorized'
          '402':
            description: Payment Required
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/paymentrequired'
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/forbidden'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notfound'
          '419':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/inputfieldmissing'
          '420':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/inputlimitexceeded'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/servererror'
          '504':
            description: Gateway Timeout
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/gatewaytimeout'
        security:
          - APIAuthorizer: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/input'
          required: true
  components:
    schemas:
      success:
        type: object
        properties: 
          LOC:
           type: array
           example: ["Beijing","Atlanta","Indonesia"]
           description: "name of location found in the text string"
          MISC:
           type: array
           example: [Twiight,Singaporean]
           description: "name of miscellaneous names found in the text string"
          ORG:
           type: array
           example: [CNA,Singapore Parliament]
           description: "name of organizations found in the text string"  
          PER:
           type: array
           example: [Skip Navigation,Bookmarks]
           description: "name of persons found in the text string"
            
      unauthorized:
        type: object
        properties:
          message:
            type: string
            example: Missing Authentication Token
          status:
            type: string
            example: Failure
      forbidden:
        type: object
        properties:
          message:
            type: string
            example: Access Denied Unauthorized User
          status:
            type: string
            example: Failure
      paymentrequired:
        type: object
        properties:
          message:
            type: string
            example: Insufficient Credits Kindly Top Up
          status:
            type: string
            example: Failure
      notfound:
        type: object
        properties:
          message:
            type: string
            example: Invalid Request URL
          status:
            type: string
            example: Failure
      servererror:
        type: object
        properties:
          message:
            type: string
            example: Internal Server Error
          status:
            type: string
            example: Failure
      gatewaytimeout:
        type: object
        properties:
          message:
            type: string
            example: Request Timeout
          status:
            type: string
            example: Failure
      inputfieldmissing:
        type: object
        properties:
          message:
            type: string
            example: Input Field Missing
          status:
            type: string
            example: Failure
      inputlimitexceeded:
        type: object
        properties:
          message:
            type: string
            example: Input Limit Exceeded
          status:
            type: string
            example: Failure            
      input:
        type: object
        required:
          - url
        properties:
          url:
            x-name: url
            type: string
            default: true
            example: https://www.channelnewsasia.com/news/international
            description: |+
              Input url 
    securitySchemes:
      APIAuthorizer:
        type: apiKey
        name: x-api-key
        in: header
        x-amazon-apigateway-authtype: custom
        description: Authentication is done using the x-api-key in the request header
