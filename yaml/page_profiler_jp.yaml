  openapi: 3.0.1
  info:
    title: Page Profiler JP
    description: |+
      This NLP microservice retrieves web content in Japanese from the input URL. From the web content, the microservice then applies natural language processing to extracts named-entities and returns the output. 
      
      The named-entity classes extracted are persons, locations, organisations and miscellaneous.
      
      This microservice automatically extracts structured information from unstructured text data such as chatlogs, emails, news articles, etc.
    x-additionalinfo: |+
      Suggested Use Cases:
      - Insights from online customers - extract structured information from unstructured text data such as chatlogs, emails, news articles, etc. to find and label fields within a document and then apply sentiment analysis to understand customer opinions to find actionable product and UX insights.

      - Entity analysis - identify entities within documents, including receipts, invoices, and contracts; and label them by types such as date, person, contact information, organization, location, events, products, and media.
    version: '1.1.0'
    x-subscribelink: page_profiler_jp
  servers:
    - url: 'https://apis.sentient.io'
  tags:
  - name: "v1.1.0"
    description: "Published Date - Dec 07, 2020"
  paths:
    /microservices/nlp/pageprofilerjp/v1/getpredictions:
      post:
        tags:
          - v1.1.0
        responses:
          '200':
            description: success response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/success'
                example: 
                  message: Successfully Processed
                  results:
                    company: 
                      - 和歌山製鉄所 
                    date:
                      - 7日,2023年9月
                      - 22年9月 
                    domestic_region: 
                      - 呉製鉄所
                    material: 
                      - 鉄鋼最大手 
                    n_product: 
                      - 高炉2基
                      - 2基","1基
                    province:
                      - 広島県呉市
                      - 和歌山市
                  status: Success
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/unauthorized'
          '402':
            description: Payment Required
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/paymentrequired'
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/forbidden'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notfound'
          '419':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/inputfieldmissing'
          '420':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/inputlimitexceeded'
          '422':
            description: Invalid Input
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/invalidinput'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/servererror'
          '504':
            description: Gateway Timeout
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/gatewaytimeout'
        security:
          - APIAuthorizer: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/input'
          required: true
  components:
    schemas:
      success:
        type: object
        properties: 
          results:
            type: object
            example: { "<Json": "Object>" }
            description: Json Object of returned results
            properties:
              Company:
                x-name: Company
                type: array
                example: [ 和歌山製鉄所 ]
                description: name of Company found in the text string
              Date:
                x-name: Date
                type: array
                example: [ 7日,2023年9月,22年9月 ]
                description: name of Date found in the text string
              Domestic_Region:
                x-name: Domestic_Region
                type: array
                example: [ 呉製鉄所 ]
                description: name of Domestic_Region found in the text string
              Material:
                x-name: Material
                type: array
                example: [ 鉄鋼最大手 ]
                description: name of Material found in the text string
          message:
            type: string
            example: Successfully Processed
            description: Detail description on the API status
          status:
            type: string
            example: Success
            description: The status of the API call success/failure
            
      unauthorized:
        type: object
        properties:
          message:
            type: string
            example: Missing Authentication Token
          status:
            type: string
            example: Failure
      forbidden:
        type: object
        properties:
          message:
            type: string
            example: Access Denied Unauthorized User
          status:
            type: string
            example: Failure
      paymentrequired:
        type: object
        properties:
          message:
            type: string
            example: Insufficient Credits Kindly Top Up
          status:
            type: string
            example: Failure
      invalidinput:
        type: object
        properties:
          message:
            type: string
            example: Invalid Input
          status:
            type: string
            example: Failure
      notfound:
        type: object
        properties:
          message:
            type: string
            example: Invalid Request URL
          status:
            type: string
            example: Failure
      servererror:
        type: object
        properties:
          message:
            type: string
            example: Internal Server Error
          status:
            type: string
            example: Failure
      gatewaytimeout:
        type: object
        properties:
          message:
            type: string
            example: Request Timeout
          status:
            type: string
            example: Failure
      inputfieldmissing:
        type: object
        properties:
          message:
            type: string
            example: Input Field Missing
          status:
            type: string
            example: Failure
      inputlimitexceeded:
        type: object
        properties:
          message:
            type: string
            example: Input Limit Exceeded
          status:
            type: string
            example: Failure 
      versions:
        type: object
        properties:
          v1.1.0:
           type: array
           items:
            oneOf:
              - type: string
                example: Published Date - Dec 07, 2020
                description: Patch Update        
          v1.0.0:
           type: array
           items:
            oneOf:
              - type: string
                example: Published Date - Oct 30, 2020
                description: Partial URL support        
          v0.1.0:
           type: array
           items:
            oneOf:
              - type: string
                example: Published Date - Sep 30, 2020
                description: Initial version release    
      input:
        type: object
        required:
          - url
        properties:
          url:
            x-name: url
            type: string
            default: true
            example: https://www.bbc.com/japanese
            description: |+
              The URL of the page to be profiled.
              
              Supported formats: ASCII only
    securitySchemes:
      APIAuthorizer:
        type: apiKey
        name: x-api-key
        in: header
        x-amazon-apigateway-authtype: custom
        description: Authentication is done using the x-api-key in the request header
