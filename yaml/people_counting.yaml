openapi: 3.0.1
info:
  title: People Counting
  description: |+
    This Computer Vision microservice tracks and counts people appearing in the input video.
    
    This microservice returns the number of people detected in that video, the likelihood of overestimation/underestimation, the first appearance and the duration and confidence of each person detected.
  version: '0.1'
servers:
  - url: 'https://apis.sentient.io'
tags:
- name: "v0.1."
  description: "Published Date - Jul 30, 2020"
paths:
  /microservices/cv/peoplecounting/v0.1/getpredictions:
    post:
      tags:
        - v0.1.

      responses:
        '200':
          description: success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example: {'counter': '11 people', 'likelihood of overestimation': '76.0%', 'likelihood of underestimation': '39.0%', 'people': [{'person id: 001': ['first appearance: 1.28s', 'duration appeared: 7.66s', 'detection confidence: 77%', 'assigning confidence: 100%']}, {'person id: 002': ['first appearance: 3.34s', 'duration appeared: 7.03s', 'detection confidence: 73%', 'assigning confidence: 82.0%']}]}

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '420':
          description: Input Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'        
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input'
        required: true


components:
  schemas:
    success:
      type: object
      example: {'counter': '11 people', 'likelihood of overestimation': '76.0%', 'likelihood of underestimation': '39.0%', 'people': [{'person id: 001': ['first appearance: 1.28s', 'duration appeared: 7.66s', 'detection confidence: 77%', 'assigning confidence: 100%']}, {'person id: 002': ['first appearance: 3.34s', 'duration appeared: 7.03s', 'detection confidence: 73%', 'assigning confidence: 82.0%']}]}
      properties:
          counter:
            type: string
            example: 11 people
            description: Number of people detected in video
          likelihood of overestimation:
            type: string
            example: 76.0%
            description:  How likely would there be ID spikes causing counter to increase People
          likelihood of underestimation:
            type: string
            example: 39.0%
            description:  How likely the model might miss out detecting people in the video
          people:
            type: array
            example: [{'person ID: 001': ['first appearance: 1.28s', 'duration appeared: 7.66s', 'detection confidence: 77%', 'assigning confidence: 100%']}, {'person ID: 002': ['first appearance: 3.34s', 'duration appeared: 7.03s', 'detection confidence: 73%', 'assigning confidence: 82.0%']}]
            description: Contains a list of individual Persons and their metadata.
            items:
              oneOf:
                - type: object
                  example: {'person ID: 001': ['first appearance: 1.28s', 'duration appeared: 7.66s', 'detection confidence: 77%', 'assigning confidence: 100%']}
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    restricted:
      type: object
      properties:
        message:
          type: string
          example: The content is restricted
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties: 
        v0.1:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Jul 30,2020
              description: Initial version release
    input:
      type: object
      required:
        - video_base64
      properties:
        video_base64:
          x-name: video_base64
          type: string
          default: true
          example: UklGRkbiBABXQVZFZm10IBAAAAABA...
          description: |+
            Input video in base64 format
        
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
