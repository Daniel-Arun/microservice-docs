openapi: 3.0.1
info:
  title: Landmark Detection (JP)
  description: |+
    This Computer Vision microservice identifies Japan landmarks from multiple input images.
    
    The microservice returns the detected landmark and confidence score.
    
    The size of your image file should be **less than 5 MB**. 
  version: '0.1.0'
  x-subscribelink: landmark_detection_jp
servers:
  - url: 'https://apis.sentient.io'
tags:
- name: "v0.1.0"
  description: "Published Date - Jul 30, 2020"
paths:
  /microservices/cv/landmarkjp/v0.1/getpredictions:
    post:
      tags:
        - v0.1.0
      responses:
        '200':
          description: success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              example:
                confidence: 100%
                landmark: Gion
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentrequired'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notfound'
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
        '420':
          description: Input Limit Exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputlimitexceeded'        
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewaytimeout'
      security:
        - APIAuthorizer: []
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/input'
        required: true


components:
  schemas:
    success:
      type: object
      properties:
        confidence:
          x-name: confidence
          type: string
          example: 100%
          description: Confidence score of identification. Higher is more confidence.
        landmark:
          x-name: landmark
          type: string
          example: Gion
          description: Name of the landmark
            
        
    
    unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Missing Authentication Token
        status:
          type: string
          example: Failure
    restricted:
      type: object
      properties:
        message:
          type: string
          example: The content is restricted
        status:
          type: string
          example: Failure
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    paymentrequired:
      type: object
      properties:
        message:
          type: string
          example: Insufficient Credits Kindly Top Up
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    gatewaytimeout:
      type: object
      properties:
        message:
          type: string
          example: Request Timeout
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    inputlimitexceeded:
      type: object
      properties:
        message:
          type: string
          example: Input Limit Exceeded
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties: 
        v0.1.0:
         type: array
         items:
          oneOf:
            - type: string
              example: Published Date - Jul 30,2020
              description: Initial version release
    input:
      type: object
      properties:
        image_base64:
          x-name: image_base64
          type: string
          default: true
          example: UklGRkbiBABXQVZFZm10IBAAAAABA...
          description: |+
            Input image in base64 format.
            
            Supported formats: blp, bmp, bufr, cur, dcx, dds, dib, eps, ps, fit, fits, flc, fli, fpx, ftc, ftu, gbr, gif, grib, h5, hd5, icns, ico, im, iim, jpeg, jp2, mic, mpeg, msp, pcd, pcx, pxr, png, ppm, psd, sgi, ras, tga, tiff, wmf, xbm, xpm.
        
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
